buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'

def versionProperties = new Properties();
versionProperties.load(new StringReader(project.file('version.properties').getText('UTF-8')))

version = versionProperties.getOrDefault('modVersion', 'unknown')
group = 'io.github.sugarmgp.eos'
archivesBaseName = 'eos'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

repositories {
    if (System.getenv().containsKey("GITHUB_ACTIONS") || System.getenv().containsKey("CI")) {
        println 'Detected Github Actions environment, Aliyun Maven will be disabled.'
    } else {
        maven {
            name = 'AliyunMaven'
            url = 'https://maven.aliyun.com/repository/public'
        }
    }
    maven { url 'https://maven.blamejared.com' }
}

minecraft {
    mappings channel: 'snapshot', version: '20201028-1.16.3'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                eos {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                eos {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'eos', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                eos {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.39'

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.4-53.3:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.4-53.3")
}

jar {
    manifest {
        attributes([
                // Specification 信息
                "Specification-Title"     : "EOS",
                "Specification-Vendor"    : "SugarWorkshop",
                "Specification-Version"   : project.version,
                // Implementation 信息
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "SugarWorkshop",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
